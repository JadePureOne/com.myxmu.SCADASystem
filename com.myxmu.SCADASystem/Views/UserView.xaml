<UserControl
    x:Class="com.myxmu.SCADASystem.Views.UserView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:com.myxmu.SCADASystem.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:com.myxmu.SCADASystem.ViewModels"
    d:DataContext="{d:DesignInstance vm:UserViewModel}"
    d:DesignHeight="800"
    d:DesignWidth="1200"
    Background="{DynamicResource MaterialDesign.Brush.Background}"
    FontFamily="Microsoft YaHei"
    FontSize="16"
    TextElement.FontSize="16"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    mc:Ignorable="d">
    <!--  页面初始化 事件转行为  -->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--  ToolBar  -->
        <StackPanel
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Orientation="Horizontal">
            <Button
                Width="100"
                Margin="10"
                Command="{Binding QueryUserCommand}"
                Content="query"
                Style="{StaticResource MyButtonStyle}" />
            <Button
                Width="100"
                Margin="10"
                Command="{Binding AddUserCommand}"
                Content="Add"
                Style="{StaticResource MyButtonStyle}" />
        </StackPanel>
        <!--  UserData  -->
        <ListView
            x:Name="listView"
            Grid.Row="1"
            ItemsSource="{Binding UserList}">
            <ListView.View>
                <GridView>
                    <GridViewColumn DisplayMemberBinding="{Binding Id}" Header="#" />
                    <GridViewColumn DisplayMemberBinding="{Binding UserName}" Header="用户名" />
                    <GridViewColumn DisplayMemberBinding="{Binding Role, Converter={StaticResource RoleConvert}}" Header="角色" />
                    <GridViewColumn DisplayMemberBinding="{Binding Password}" Header="密码" />
                    <GridViewColumn DisplayMemberBinding="{Binding CreateDateTime, Converter={StaticResource DateTimeConvert}}" Header="创建时间" />
                    <GridViewColumn DisplayMemberBinding="{Binding UpDateTime, Converter={StaticResource DateTimeConvert}}" Header="修改时间" />
                    <GridViewColumn Header="操作">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">

                                    <TextBlock
                                        Margin="10,0,10,0"
                                        Style="{StaticResource MyTag}"
                                        Text="修改">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseUp">
                                                <!--  ListView 的 ItemsSource 绑定到 UserList，每个项的 DataContext 是一个 UserModel。因此，CommandParameter="{Binding}" 会传递当前项的 UserModel。  -->
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext.EditUserCommand}" CommandParameter="{Binding}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBlock>

                                    <TextBlock
                                        Margin="10,0,10,0"
                                        Style="{StaticResource MyTag}"
                                        Text="删除">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseUp">
                                                <!--  ListView 的 ItemsSource 绑定到 UserList，每个项的 DataContext 是一个 UserModel。因此，CommandParameter="{Binding}" 会传递当前项的 UserModel。  -->
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext.DeleteUserCommand}" CommandParameter="{Binding}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</UserControl>

